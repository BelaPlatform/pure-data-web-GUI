#N struct help-element-template float x float y array array1 help-element-array1-template
;
#N struct help-element-array1-template float y;
#N canvas 622 48 646 530 12;
#X text 21 494 see also:;
#N canvas 970 300 501 251 help-element-template 0;
#X obj 50 110 plot array1 500 1 10 15 20;
#X obj 50 154 filledpolygon 509 509 0 -10 -10 10 -10 10 10 -10 10;
#X obj 50 52 struct help-element-template float x float y array array1
help-element-array1-template, f 44;
#X restore 425 416 pd help-element-template;
#N canvas 267 157 292 163 help-element-data 1;
#X scalar help-element-template 35 24 \; 20 \; 10 \; 26 \; 10 \; 32
\; 10 \; 43 \; -2 \; 33 \; \;;
#X restore 453 390 pd help-element-data;
#N canvas 931 474 373 142 help-element-array1-template 0;
#X obj 30 71 filledpolygon 0 0 0 -5 0 0 5 5 0 0 -5;
#X obj 32 27 struct help-element-array1-template float y;
#X restore 376 440 pd help-element-array1-template;
#X obj 26 17 element;
#X obj 148 494 pointer;
#X obj 207 494 getsize;
#X obj 266 494 setsize;
#X obj 324 296 pointer;
#X msg 324 272 traverse pd-help-element-data \, next;
#X floatatom 54 266 5 -5 15 0 - - - 0;
#X obj 54 402 get help-element-array1-template y;
#X floatatom 54 433 5 0 0 0 - - - 0;
#X text 338 325 pointer inlet;
#X text 95 265 index;
#X text 97 434 here we just get the value of y.;
#X text 56 145 Indices range from 0 to the number of elements minus
one \; indices out of range are quietly replaced by the nearest endpoint.
, f 66;
#X text 323 250 click here first;
#X obj 95 494 struct;
#X text 426 496 updated for Pd version 0.47;
#X msg 64 317 set help-element-template array1;
#X text 87 295 set template and field name;
#X text 56 188 If you don't know the template name you may specify
"-" \, in which case the object will figure out the template name itself
\, at some possible cost in efficiency and clarity., f 75;
#X text 88 16 - get pointer to an element of an array, f 40;
#X text 57 63 "element" takes a pointer at right and an index number
at left. It looks up a field from the pointer \, which should be an
array \, and outputs the element of the array specified by the index
number. There are no pointers to arrays themselves \, just to individual
elements. The template and field name are specified as creation arguments.
, f 75;
#X obj 326 494 plot;
#X text 59 376 outlet is pointer to a single element;
#X text 343 352 arguments: template name \, field name;
#X obj 8 45 cnv 1 630 1 empty empty empty 8 12 0 13 #000000 #000000
0;
#N canvas 757 196 576 275 reference 0;
#X obj 9 42 cnv 5 550 5 empty empty INLETS: 8 18 0 13 #202020 #000000
0;
#X obj 9 162 cnv 2 550 2 empty empty OUTLET: 8 12 0 13 #202020 #000000
0;
#X obj 9 198 cnv 2 550 2 empty empty ARGUMENTS: 8 12 0 13 #202020 #000000
0;
#X obj 8 248 cnv 5 550 5 empty empty empty 8 18 0 13 #202020 #000000
0;
#X text 150 82 float -;
#X obj 30 13 element;
#X text 92 12 - get pointer to an element of an array, f 40;
#X text 179 206 1) symbol - template name.;
#X text 179 225 2) symbol - field name., f 26;
#X text 45 101 set <symbol \, symbol> - set template and field name.
, f 69;
#X text 206 82 set element index and output pointer., f 46;
#X text 136 171 pointer - pointer to element in an array.;
#X obj 9 74 cnv 1 550 1 empty empty 1st: 8 12 0 13 #9f9f9f #000000
0;
#X obj 9 128 cnv 1 550 1 empty empty 2nd: 8 12 0 13 #9f9f9f #000000
0;
#X text 136 135 pointer - pointer to an array.;
#X restore 467 17 pd reference;
#X text 565 18 <= click;
#X obj 8 480 cnv 1 630 1 empty empty empty 8 12 0 13 #000000 #000000
0;
#X obj 54 353 element help-element-template array1, f 39;
#X connect 8 0 32 1;
#X connect 9 0 8 0;
#X connect 10 0 32 0;
#X connect 11 0 12 0;
#X connect 20 0 32 0;
#X connect 32 0 11 0;
